{"remainingRequest":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vuepress-theme-jabinblog\\layouts\\Tag.vue?vue&type=style&index=1&id=3c071258&prod&lang=stylus&scoped=true&","dependencies":[{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vuepress-theme-jabinblog\\layouts\\Tag.vue","mtime":1699327908568},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\css-loader\\dist\\cjs.js","mtime":1699327900311},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1699327908220},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\postcss-loader\\src\\index.js","mtime":1699327905233},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\stylus-loader\\index.js","mtime":1699327907080},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1699327898472},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1699327908219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAcmVxdWlyZSAnLi4vc3R5bGVzL21vZGUuc3R5bCcNCi50YWctd3JhcHBlcg0KICBtYXgtd2lkdGg6ICRjb250ZW50V2lkdGg7DQogIG1hcmdpbjogMCBhdXRvOw0KICBwYWRkaW5nOiA0LjZyZW0gMi41cmVtIDA7DQoNCkBtZWRpYSAobWF4LXdpZHRoOiAkTVFNb2JpbGUpDQogIC50YWctd3JhcHBlcg0KICAgIHBhZGRpbmc6IDQuNnJlbSAxcmVtIDA7DQo="},{"version":3,"sources":["Tag.vue"],"names":[],"mappings":";AAsGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Tag.vue","sourceRoot":"node_modules/vuepress-theme-jabinblog/layouts","sourcesContent":["<template>\r\n  <!-- 公共布局 -->\r\n  <Common class=\"tag-wrapper\" :sidebar=\"false\">\r\n    <!-- 标签集合 -->\r\n    <ModuleTransition>\r\n      <TagList\r\n        v-show=\"recoShowModule\"\r\n        class=\"tags\"\r\n        :currentTag=\"$currentTags.key\"\r\n        @getCurrentTag=\"tagClick\"></TagList>\r\n    </ModuleTransition>\r\n\r\n    <!-- 博客列表 -->\r\n    <ModuleTransition delay=\"0.08\">\r\n      <note-abstract\r\n        v-show=\"recoShowModule\"\r\n        class=\"list\"\r\n        :data=\"posts\"\r\n        :currentPage=\"currentPage\"\r\n        @currentTag=\"$currentTags.key\"></note-abstract>\r\n    </ModuleTransition>\r\n\r\n    <!-- 分页 -->\r\n    <ModuleTransition delay=\"0.16\">\r\n      <pagation\r\n        class=\"pagation\"\r\n        :total=\"posts.length\"\r\n        :currentPage=\"currentPage\"\r\n        @getCurrentPage=\"getCurrentPage\"></pagation>\r\n    </ModuleTransition>\r\n  </Common>\r\n</template>\r\n\r\n<script>\r\nimport Common from '@theme/components/Common'\r\nimport NoteAbstract from '@theme/components/NoteAbstract'\r\nimport TagList from '@theme/components/TagList'\r\nimport pagination from '@theme/mixins/pagination'\r\nimport ModuleTransition from '@theme/components/ModuleTransition'\r\nimport { sortPostsByStickyAndDate, filterPosts } from '@theme/helpers/postData'\r\nimport moduleTransitonMixin from '@theme/mixins/moduleTransiton'\r\n\r\nexport default {\r\n  mixins: [pagination, moduleTransitonMixin],\r\n  components: { Common, NoteAbstract, TagList, ModuleTransition },\r\n\r\n  data () {\r\n    return {\r\n      currentPage: 1,\r\n      currentTag: '全部'\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    // 时间降序后的博客列表\r\n    posts () {\r\n      let posts = this.$currentTags.pages\r\n      posts = filterPosts(posts)\r\n      sortPostsByStickyAndDate(posts)\r\n      return posts\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    this._setPage(this._getStoragePage())\r\n  },\r\n\r\n  methods: {\r\n    // 获取当前tag\r\n    getCurrentTag (tag) {\r\n      this.$emit('currentTag', tag)\r\n    },\r\n    tagClick (tagInfo) {\r\n      if (this.$route.path !== tagInfo.path) {\r\n        this.$router.push({ path: tagInfo.path })\r\n      }\r\n    },\r\n    // 获取当前页码\r\n    getCurrentPage (page) {\r\n      this._setPage(page)\r\n      setTimeout(() => {\r\n        window.scrollTo(0, 0)\r\n      }, 100)\r\n    },\r\n    _setPage (page) {\r\n      this.currentPage = page\r\n      this.$page.currentPage = page\r\n      this._setStoragePage(page)\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    $route () {\r\n      this._setPage(this._getStoragePage())\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"../styles/theme.styl\" lang=\"stylus\"></style>\r\n\r\n<style lang=\"stylus\" scoped>\r\n@require '../styles/mode.styl'\r\n.tag-wrapper\r\n  max-width: $contentWidth;\r\n  margin: 0 auto;\r\n  padding: 4.6rem 2.5rem 0;\r\n\r\n@media (max-width: $MQMobile)\r\n  .tag-wrapper\r\n    padding: 4.6rem 1rem 0;\r\n</style>\r\n"]}]}