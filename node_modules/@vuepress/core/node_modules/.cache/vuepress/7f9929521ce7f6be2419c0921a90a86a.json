{"remainingRequest":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vuepress-theme-jabinblog\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vuepress-theme-jabinblog\\components\\Navbar.vue","mtime":1699327908554},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1699327898472},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\babel-loader\\lib\\index.js","mtime":1699327898130},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1699327898472},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1699327908219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQWxnb2xpYVNlYXJjaEJveCBmcm9tICdAQWxnb2xpYVNlYXJjaEJveCcNCmltcG9ydCBTZWFyY2hCb3ggZnJvbSAnQFNlYXJjaEJveCcNCmltcG9ydCBTaWRlYmFyQnV0dG9uIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1NpZGViYXJCdXR0b24nDQppbXBvcnQgTmF2TGlua3MgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2TGlua3MnDQppbXBvcnQgTW9kZSBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9Nb2RlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsgU2lkZWJhckJ1dHRvbiwgTmF2TGlua3MsIFNlYXJjaEJveCwgQWxnb2xpYVNlYXJjaEJveCwgTW9kZSB9LA0KDQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBsaW5rc1dyYXBNYXhXaWR0aDogbnVsbA0KICAgIH0NCiAgfSwNCg0KICBtb3VudGVkICgpIHsNCiAgICBjb25zdCBNT0JJTEVfREVTS1RPUF9CUkVBS1BPSU5UID0gNzE5IC8vIHJlZmVyIHRvIGNvbmZpZy5zdHlsDQogICAgY29uc3QgTkFWQkFSX1ZFUlRJQ0FMX1BBRERJTkcgPSBwYXJzZUludChjc3ModGhpcy4kZWwsICdwYWRkaW5nTGVmdCcpKSArIHBhcnNlSW50KGNzcyh0aGlzLiRlbCwgJ3BhZGRpbmdSaWdodCcpKQ0KICAgIGNvbnN0IGhhbmRsZUxpbmtzV3JhcFdpZHRoID0gKCkgPT4gew0KICAgICAgaWYgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCA8IE1PQklMRV9ERVNLVE9QX0JSRUFLUE9JTlQpIHsNCiAgICAgICAgdGhpcy5saW5rc1dyYXBNYXhXaWR0aCA9IG51bGwNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMubGlua3NXcmFwTWF4V2lkdGggPSB0aGlzLiRlbC5vZmZzZXRXaWR0aCAtIE5BVkJBUl9WRVJUSUNBTF9QQURESU5HIC0NCiAgICAgICAgICAodGhpcy4kcmVmcy5zaXRlTmFtZSAmJiB0aGlzLiRyZWZzLnNpdGVOYW1lLm9mZnNldFdpZHRoIHx8IDApDQogICAgICB9DQogICAgfQ0KICAgIGhhbmRsZUxpbmtzV3JhcFdpZHRoKCkNCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlTGlua3NXcmFwV2lkdGgsIGZhbHNlKQ0KICB9LA0KDQogIGNvbXB1dGVkOiB7DQogICAgYWxnb2xpYSAoKSB7DQogICAgICByZXR1cm4gdGhpcy4kdGhlbWVMb2NhbGVDb25maWcuYWxnb2xpYSB8fCB0aGlzLiR0aGVtZUNvbmZpZy5hbGdvbGlhIHx8IHt9DQogICAgfSwNCg0KICAgIGlzQWxnb2xpYVNlYXJjaCAoKSB7DQogICAgICByZXR1cm4gdGhpcy5hbGdvbGlhICYmIHRoaXMuYWxnb2xpYS5hcGlLZXkgJiYgdGhpcy5hbGdvbGlhLmluZGV4TmFtZQ0KICAgIH0NCiAgfSwNCg0KICBtZXRob2RzOiB7DQogICAgdGhyb3R0bGUgKGZ1bmMsIGRlbGF5KSB7DQogICAgICBsZXQgdGltZXIgPSBudWxsDQogICAgICBsZXQgc3RhcnRUaW1lID0gRGF0ZS5ub3coKQ0KDQogICAgICByZXR1cm4gZnVuY3Rpb24gKCkgew0KICAgICAgICBjb25zdCBjdXJUaW1lID0gRGF0ZS5ub3coKQ0KICAgICAgICBjb25zdCByZW1haW5pbmcgPSBkZWxheSAtIChjdXJUaW1lIC0gc3RhcnRUaW1lKQ0KICAgICAgICBjb25zdCBjb250ZXh0ID0gdGhpcw0KICAgICAgICBjb25zdCBhcmdzID0gYXJndW1lbnRzDQoNCiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKQ0KICAgICAgICBpZiAocmVtYWluaW5nIDw9IDApIHsNCiAgICAgICAgICBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpDQogICAgICAgICAgc3RhcnRUaW1lID0gRGF0ZS5ub3coKQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jLCByZW1haW5pbmcpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg0KZnVuY3Rpb24gY3NzIChlbCwgcHJvcGVydHkpIHsNCiAgLy8gTk9URTogS25vd24gYnVnLCB3aWxsIHJldHVybiAnYXV0bycgaWYgc3R5bGUgdmFsdWUgaXMgJ2F1dG8nDQogIGNvbnN0IHdpbiA9IGVsLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcNCiAgLy8gbnVsbCBtZWFucyBub3QgdG8gcmV0dXJuIHBzZXVkbyBzdHlsZXMNCiAgcmV0dXJuIHdpbi5nZXRDb21wdXRlZFN0eWxlKGVsLCBudWxsKVtwcm9wZXJ0eV0NCn0NCg=="},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";AAmCA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Navbar.vue","sourceRoot":"node_modules/vuepress-theme-jabinblog/components","sourcesContent":["<template>\r\n  <header class=\"navbar\">\r\n    <SidebarButton @toggle-sidebar=\"$emit('toggle-sidebar')\"/>\r\n\r\n    <router-link\r\n      :to=\"$localePath\"\r\n      class=\"home-link\">\r\n      <img\r\n        class=\"logo\"\r\n        v-if=\"$themeConfig.logo\"\r\n        :src=\"$withBase($themeConfig.logo)\"\r\n        :alt=\"$siteTitle\">\r\n      <span\r\n        ref=\"siteName\"\r\n        class=\"site-name\"\r\n        v-if=\"$siteTitle\">{{ $siteTitle }}</span>\r\n    </router-link>\r\n\r\n    <div\r\n      class=\"links\"\r\n      :style=\"linksWrapMaxWidth ? {\r\n        'max-width': linksWrapMaxWidth + 'px'\r\n      } : {}\">\r\n\r\n      <Mode />\r\n      <AlgoliaSearchBox\r\n        v-if=\"isAlgoliaSearch\"\r\n        :options=\"algolia\"/>\r\n      <SearchBox v-else-if=\"$themeConfig.search !== false && $frontmatter.search !== false\"/>\r\n      <NavLinks class=\"can-hide\"/>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nimport AlgoliaSearchBox from '@AlgoliaSearchBox'\r\nimport SearchBox from '@SearchBox'\r\nimport SidebarButton from '@theme/components/SidebarButton'\r\nimport NavLinks from '@theme/components/NavLinks'\r\nimport Mode from '@theme/components/Mode'\r\n\r\nexport default {\r\n  components: { SidebarButton, NavLinks, SearchBox, AlgoliaSearchBox, Mode },\r\n\r\n  data () {\r\n    return {\r\n      linksWrapMaxWidth: null\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    const MOBILE_DESKTOP_BREAKPOINT = 719 // refer to config.styl\r\n    const NAVBAR_VERTICAL_PADDING = parseInt(css(this.$el, 'paddingLeft')) + parseInt(css(this.$el, 'paddingRight'))\r\n    const handleLinksWrapWidth = () => {\r\n      if (document.documentElement.clientWidth < MOBILE_DESKTOP_BREAKPOINT) {\r\n        this.linksWrapMaxWidth = null\r\n      } else {\r\n        this.linksWrapMaxWidth = this.$el.offsetWidth - NAVBAR_VERTICAL_PADDING -\r\n          (this.$refs.siteName && this.$refs.siteName.offsetWidth || 0)\r\n      }\r\n    }\r\n    handleLinksWrapWidth()\r\n    window.addEventListener('resize', handleLinksWrapWidth, false)\r\n  },\r\n\r\n  computed: {\r\n    algolia () {\r\n      return this.$themeLocaleConfig.algolia || this.$themeConfig.algolia || {}\r\n    },\r\n\r\n    isAlgoliaSearch () {\r\n      return this.algolia && this.algolia.apiKey && this.algolia.indexName\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    throttle (func, delay) {\r\n      let timer = null\r\n      let startTime = Date.now()\r\n\r\n      return function () {\r\n        const curTime = Date.now()\r\n        const remaining = delay - (curTime - startTime)\r\n        const context = this\r\n        const args = arguments\r\n\r\n        clearTimeout(timer)\r\n        if (remaining <= 0) {\r\n          func.apply(context, args)\r\n          startTime = Date.now()\r\n        } else {\r\n          timer = setTimeout(func, remaining)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction css (el, property) {\r\n  // NOTE: Known bug, will return 'auto' if style value is 'auto'\r\n  const win = el.ownerDocument.defaultView\r\n  // null means not to return pseudo styles\r\n  return win.getComputedStyle(el, null)[property]\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n@require '../styles/mode.styl'\r\n\r\n$navbar-vertical-padding = 0.7rem\r\n$navbar-horizontal-padding = 1.5rem\r\n\r\n.navbar\r\n  padding $navbar-vertical-padding $navbar-horizontal-padding\r\n  line-height $navbarHeight - 1.4rem\r\n  box-shadow var(--box-shadow)\r\n  background var(--background-color)\r\n  a, span, img\r\n    display inline-block\r\n  .logo\r\n    height $navbarHeight - 1.4rem\r\n    min-width $navbarHeight - 1.4rem\r\n    margin-right 0.8rem\r\n    vertical-align top\r\n    border-radius 50%\r\n  .site-name\r\n    font-size 1.2rem\r\n    font-weight 600\r\n    color var(--text-color)\r\n    position relative\r\n  .links\r\n    padding-left 1.5rem\r\n    box-sizing border-box\r\n    white-space nowrap\r\n    font-size 0.9rem\r\n    position absolute\r\n    right $navbar-horizontal-padding\r\n    top $navbar-vertical-padding\r\n    display flex\r\n    background-color var(--background-color)\r\n    .search-box\r\n      flex: 0 0 auto\r\n      vertical-align top\r\n\r\n@media (max-width: $MQMobile)\r\n  .navbar\r\n    padding-left 4rem\r\n    .can-hide\r\n      display none\r\n    .links\r\n      padding-left .2rem\r\n</style>\r\n"]}]}