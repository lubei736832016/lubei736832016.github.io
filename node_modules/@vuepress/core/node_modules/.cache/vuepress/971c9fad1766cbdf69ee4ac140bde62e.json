{"remainingRequest":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\@noxone\\vuepress-plugin-cover\\lib\\typed.js","dependencies":[{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\@noxone\\vuepress-plugin-cover\\lib\\typed.js","mtime":1698650549606},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698629819508},{"path":"D:\\VuePress-boke-them\\lubei736832016.github.io\\node_modules\\babel-loader\\lib\\index.js","mtime":1698629819812}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}